name: Deploy Nginx Hello Helm

on:
  workflow_dispatch:
    inputs:
      h1Content:
        description: 'Content for the H1 tag'
        required: true
        default: 'Hello from GitHub Actions'
      pipelineID:
        description: 'Optional unique pipeline ID for Ingress host'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: [self-hosted, kubernetes, dev-deployment]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup kubeconfig for runner
        run: |
          # Setup kubeconfig using the script provided in runner
          if [ -f /opt/scripts/setup-kubeconfig.sh ]; then
            bash /opt/scripts/setup-kubeconfig.sh
          else
            echo "Using existing kubeconfig from service account"
          fi

      - name: Generate Helm template and deploy
        run: |
          # U≈ºyj podanego pipelineID lub automatycznie github.run_id
          PIPELINE_ID="${{ github.event.inputs.pipelineID }}"
          if [ -z "$PIPELINE_ID" ]; then
            PIPELINE_ID="${{ github.run_id }}"
          fi
          
          # Use deployment namespace with prefix
          NAMESPACE="app-dev-pr-${PIPELINE_ID}"

          echo "Using PIPELINE_ID: $PIPELINE_ID"
          echo "Deploying to namespace: $NAMESPACE"
          
          # Create namespace if it doesn't exist
          kubectl create namespace "$NAMESPACE" --dry-run=client -o yaml | kubectl apply -f -
          
          # Deploy using Helm
          helm upgrade --install nginx-${PIPELINE_ID} . \
            --namespace "$NAMESPACE" \
            --set h1Content="${{ github.event.inputs.h1Content }}" \
            --set pipelineID="$PIPELINE_ID" \
            --set namespace="$NAMESPACE" \
            --timeout=5m \
            --wait
            
      - name: Show deployment info
        run: |
          PIPELINE_ID="${{ github.event.inputs.pipelineID }}"
          if [ -z "$PIPELINE_ID" ]; then
            PIPELINE_ID="${{ github.run_id }}"
          fi
          
          NAMESPACE="app-dev-pr-${PIPELINE_ID}"
          
          echo "üöÄ Deployment completed!"
          echo "üì¶ Namespace: $NAMESPACE"
          echo "üåê Application URL: https://${PIPELINE_ID}.dev.statslab.local"
          echo ""
          echo "üìä Pod status:"
          kubectl get pods -n "$NAMESPACE" -l app.kubernetes.io/instance=nginx-${PIPELINE_ID}
          echo ""
          echo "üîó Service status:"
          kubectl get svc -n "$NAMESPACE" -l app.kubernetes.io/instance=nginx-${PIPELINE_ID}
          echo ""
          echo "üåç Ingress status:"
          kubectl get ingress -n "$NAMESPACE" -l app.kubernetes.io/instance=nginx-${PIPELINE_ID}
